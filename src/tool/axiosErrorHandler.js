'use strict';
// universal error handler to handle all errors generated by Axios

module.exports = (error, noConnectionErr, next, serviceName, serviceURL)=>{

  if (!error.response) {
    // fire up moitor
    
    // remove dead service url from global service list
    global.services[serviceName]={
      urls: global.services[serviceName].urls.filter(url => url != serviceURL),
      currentIndex: global.services[serviceName].currentIndex-1 < 0 ? 0 : global.services[serviceName].currentIndex-1,
    };
    console.log('updated global list: ', global.services);
    return next(noConnectionErr);
  } else {
    const receivedError = {'message_spec':error.response.data , 'statusCode': error.response.status, 'statusMessage': error.response.statusText };
    return next(receivedError);
    // fire up minitor
  }
};
